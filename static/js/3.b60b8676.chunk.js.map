{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["module","exports","my_posts","new_post","item","like","main_img","avatar_content","logo","about","statusWrapper","Post","_ref","postData","react_default","a","createElement","className","classes","likes","message","maxLength10","maxLengthCreator","MyPosts","React","memo","props","postsTemplate","posts","map","post","MyPosts_Post_Post","key","id","PostFormRedux","onSubmit","newPostText","addPost","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","profilePage","ProfileStatus","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","Fragment","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","Preloader","contacts","contactsArr","prop","concat","toConsumableArray","src","photos","large","alt","fullName","ProfileInfo_ProfileStatus_ProfileStatus","contact","contacts__item","entries","job","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","components_Profile_Profile","assign","Component","compose","withRouter","state","auth","isAuth"],"mappings":"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","file":"static/js/3.b60b8676.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_posts\":\"MyPosts_my_posts__KrrwU\",\"new_post\":\"MyPosts_new_post__1PnnO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"like\":\"Post_like__oViQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_img\":\"ProfileInfo_main_img__7BfSS\",\"avatar_content\":\"ProfileInfo_avatar_content__2wWZb\",\"logo\":\"ProfileInfo_logo__2_ojy\",\"about\":\"ProfileInfo_about__ogyhT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusWrapper\":\"ProfileStatus_statusWrapper__2EA8v\"};","import React from 'react'\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = ({postData}) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <span className={classes.like}>{postData.likes}</span>\r\n      {postData.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\"\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\"\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsTemplate = props.posts.map(post => <Post key={post.id} postData={post} />)\r\n\r\n  const addPost = ({newPostText}) => {\r\n      props.addPost(newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.my_posts}>\r\n        <PostFormRedux onSubmit={addPost} />\r\n        <div className={classes.posts}>\r\n          {postsTemplate}\r\n        </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst PostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit} className={classes.new_post}>\r\n            <Field component={Textarea} name={\"newPostText\"} placeholder={\"Post message\"}\r\n                    validate={[required, maxLength10]} />\r\n            <button className=\"btn\">Add Post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostFormRedux = reduxForm({form: \"postForm\"})(PostForm)\r\n\r\nexport default MyPosts\r\n","import React from 'react'\r\nimport MyPosts from './MyPosts'\r\nimport {addPost} from \"../../../redux/profile-reducer\"\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToProps = ({profilePage}) => ({posts: profilePage.posts})\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,{addPost})(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n","import React, {useState,useEffect} from 'react'\nimport classes from './ProfileStatus.module.css'\n\nconst ProfileStatus = (props) => {\n    let [editMode,setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n    useEffect(() => {\n        setStatus(props.status)\n    },[props.status])\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return(\n        <>\n            {!editMode &&\n                <div className={classes.statusWrapper}>\n                    <p onDoubleClick={activateEditMode}>{props.status || \"-----\"}</p>\n                </div>\n            }\n            {editMode &&\n                <div className={classes.statusWrapper}>\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\n                </div>\n            }\n        </>\n    )\n}\n\nexport default ProfileStatus","import React from 'react'\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\"\r\n\r\nconst ProfileInfo = (props) => {\r\n  if(!props.profile) return <Preloader />\r\n\r\n  let contacts = props.profile.contacts   \r\n  let contactsArr = []\r\n\r\n  for(var prop in contacts) {\r\n    contactsArr = [...contactsArr, {prop : contacts[prop]}]\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.avatar_content}>\r\n        <div className={classes.logo}>\r\n          <img src={props.profile.photos.large ? props.profile.photos.large \r\n            : 'https://png.pngtree.com/svg/20161212/f93e57629c.svg'} alt=\"Photo\" />\r\n        </div>\r\n        <div className={classes.about}>\r\n          <span className={classes.fullName}>{props.profile.fullName}</span>\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\r\n        </div>\r\n      </div>\r\n      <div className={classes.contacts}>\r\n       {\r\n        contactsArr.map(contact => <div className={classes.contacts__item}><span>{Object.entries(contact)[0]}:</span><span>{Object.entries(contact)[1]}</span></div>    )\r\n       }                \r\n      </div>\r\n      <div className={classes.job}>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo\r\n","import React from 'react'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\nconst Profile = ({profile, status, updateStatus}) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={profile} status={status} updateStatus={updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\nimport Profile from './Profile'\nimport {connect} from 'react-redux'\nimport {compose} from 'redux'\nimport {withRouter} from 'react-router-dom'\nimport {getProfile, getStatus, updateStatus} from '../../redux/profile-reducer'\n\nclass ProfileContainer extends React.Component  {\n\n\tcomponentDidMount() {\n\t\tlet userId = this.props.match.params.userId\n\t\tif(!userId) {\n\t\t\tuserId = this.props.authorizedUserId\n\t\t\tif(!userId) {\n\t\t\t\tthis.props.history.push('/login')\n\t\t\t}\n\t\t}\n\n\t\tthis.props.getProfile(userId)\n\t\tthis.props.getStatus(userId)\n\t}\n\n\trender() {\n\t\treturn <Profile {...this.props} profile={this.props.profile}\n\t\t\t\t\t\tstatus={this.props.status} updateStatus={this.props.updateStatus} />\n\t}\n}\n\nlet mapStateToProps = (state) => ({\n\tprofile: state.profilePage.profile,\n\tstatus: state.profilePage.status,\n\tauthorizedUserId: state.auth.userId,\n\tisAuth: state.auth.isAuth\n})\n\nexport default compose(\n\twithRouter,\n\tconnect(mapStateToProps,{getProfile, getStatus, updateStatus})\n)(ProfileContainer)\n"],"sourceRoot":""}