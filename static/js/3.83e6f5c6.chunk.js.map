{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.js","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.js"],"names":["module","exports","my_posts","new_post","item","like","main_img","avatar_content","logo","about","avatar__uploadBtn","statusWrapper","Post","_ref","postData","react_default","a","createElement","className","classes","likes","message","maxLength10","maxLengthCreator","MyPosts","React","memo","props","postsTemplate","posts","map","post","MyPosts_Post_Post","key","id","PostFormRedux","onSubmit","newPostText","addPost","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","profilePage","ProfileStatus","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","Fragment","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","isOwner","savePhoto","Preloader","contacts","contactsArr","prop","concat","toConsumableArray","avatar__logo_wrapper","src","photos","large","userPhoto","alt","type","target","files","length","fullName","ProfileInfo_ProfileStatus_ProfileStatus","contact","contacts__item","entries","job","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","Component","compose","withRouter","state","auth","isAuth"],"mappings":"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","file":"static/js/3.83e6f5c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"my_posts\":\"MyPosts_my_posts__KrrwU\",\"new_post\":\"MyPosts_new_post__1PnnO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"like\":\"Post_like__oViQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_img\":\"ProfileInfo_main_img__7BfSS\",\"avatar_content\":\"ProfileInfo_avatar_content__2wWZb\",\"logo\":\"ProfileInfo_logo__2_ojy\",\"about\":\"ProfileInfo_about__ogyhT\",\"avatar__uploadBtn\":\"ProfileInfo_avatar__uploadBtn__K6XjH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statusWrapper\":\"ProfileStatus_statusWrapper__2EA8v\"};","import React from 'react'\r\nimport classes from './Post.module.css'\r\n\r\nconst Post = ({postData}) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <span className={classes.like}>{postData.likes}</span>\r\n      {postData.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\"\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\"\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsTemplate = props.posts.map(post => <Post key={post.id} postData={post} />)\r\n\r\n  const addPost = ({newPostText}) => {\r\n      props.addPost(newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.my_posts}>\r\n        <PostFormRedux onSubmit={addPost} />\r\n        <div className={classes.posts}>\r\n          {postsTemplate}\r\n        </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst PostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit} className={classes.new_post}>\r\n            <Field component={Textarea} name={\"newPostText\"} placeholder={\"Post message\"}\r\n                    validate={[required, maxLength10]} />\r\n            <button className=\"btn\">Add Post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst PostFormRedux = reduxForm({form: \"postForm\"})(PostForm)\r\n\r\nexport default MyPosts\r\n","import React from 'react'\r\nimport MyPosts from './MyPosts'\r\nimport {addPost} from \"../../../redux/profile-reducer\"\r\nimport {connect} from 'react-redux'\r\n\r\nlet mapStateToProps = ({profilePage}) => ({posts: profilePage.posts})\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,{addPost})(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n","import React, {useState,useEffect} from 'react'\nimport classes from './ProfileStatus.module.css'\n\nconst ProfileStatus = (props) => {\n    let [editMode,setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n    useEffect(() => {\n        setStatus(props.status)\n    },[props.status])\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return(\n        <>\n            {!editMode &&\n                <div className={classes.statusWrapper}>\n                    <p onDoubleClick={activateEditMode}>{props.status || \"-----\"}</p>\n                </div>\n            }\n            {editMode &&\n                <div className={classes.statusWrapper}>\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\n                </div>\n            }\n        </>\n    )\n}\n\nexport default ProfileStatus","import React from 'react'\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/Preloader/Preloader'\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\"\r\nimport userPhoto from '../../../assets/img/user.png'\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n  if(!profile) return <Preloader />\r\n\r\n  let contacts = profile.contacts\r\n  let contactsArr = []\r\n\r\n  for(var prop in contacts) {\r\n    contactsArr = [...contactsArr, {prop : contacts[prop]}]\r\n  }\r\n\r\n  const onMainPhotoSelected = e => {\r\n      if(e.target.files.length) {\r\n          savePhoto(e.target.files[0])\r\n\r\n      }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.avatar_content}>\r\n        <div className={classes.avatar__logo_wrapper}>\r\n            <div className={classes.logo}>\r\n                <img src={profile.photos.large || userPhoto} alt=\"Photo\" />\r\n            </div>\r\n            {isOwner && <div className={classes.avatar__uploadBtn}>\r\n                 <input type=\"file\" onChange={onMainPhotoSelected} />\r\n                 <span>Upload photo</span>\r\n            </div>}\r\n        </div>\r\n        <div className={classes.about}>\r\n          <span className={classes.fullName}>{profile.fullName}</span>\r\n            <ProfileStatus status={status} updateStatus={updateStatus} />\r\n        </div>\r\n      </div>\r\n      <div className={classes.contacts}>\r\n       {\r\n        contactsArr.map(contact => <div className={classes.contacts__item}>\r\n            <span>{Object.entries(contact)[0]}:</span><span>{Object.entries(contact)[1]}</span>\r\n        </div>)\r\n       }                \r\n      </div>\r\n      <div className={classes.job}>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo\r\n","import React from 'react'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\r\n\r\nconst Profile = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={profile} status={status} updateStatus={updateStatus}\r\n                   isOwner={isOwner} savePhoto={savePhoto} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\nimport Profile from './Profile'\nimport {connect} from 'react-redux'\nimport {compose} from 'redux'\nimport {withRouter} from 'react-router-dom'\nimport {getProfile, getStatus, savePhoto, updateStatus} from '../../redux/profile-reducer'\n\nclass ProfileContainer extends React.Component  {\n\n\trefreshProfile() {\n\t\tlet userId = this.props.match.params.userId\n\t\tif(!userId) {\n\t\t\tuserId = this.props.authorizedUserId\n\t\t\tif(!userId) {\n\t\t\t\tthis.props.history.push('/login')\n\t\t\t}\n\t\t}\n\n\t\tthis.props.getProfile(userId)\n\t\tthis.props.getStatus(userId)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.refreshProfile()\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tif(this.props.match.params.userId !== prevProps.match.params.userId) {\n\t\t\tthis.refreshProfile()\n\t\t}\n\t}\n\n\trender() {\n\t\treturn <Profile {...this.props}\n\t\t\t\t\t\tprofile={this.props.profile}\n\t\t\t\t\t\tstatus={this.props.status}\n\t\t\t\t\t\tupdateStatus={this.props.updateStatus}\n\t\t\t\t\t\tisOwner={!this.props.match.params.userId}\n\t\t\t\t\t\tsavePhoto={this.props.savePhoto}/>\n\t}\n}\n\nlet mapStateToProps = (state) => ({\n\tprofile: state.profilePage.profile,\n\tstatus: state.profilePage.status,\n\tauthorizedUserId: state.auth.userId,\n\tisAuth: state.auth.isAuth\n})\n\nexport default compose(\n\twithRouter,\n\tconnect(mapStateToProps,{getProfile, getStatus, updateStatus, savePhoto})\n)(ProfileContainer)\n"],"sourceRoot":""}